_parent_: options/base.yaml

arch:
    use_tcnn: true
    feature_network_config:
        otype: FullyFusedMLP
        activation: ReLU
        output_activation: None
        n_neurons: 64 # FullyFusedMLP only support 128
        n_hidden_layers: 2
    rgb_network_config:
        otype: FullyFusedMLP
        activation: ReLU
        output_activation: None
        n_neurons: 64 # FullyFusedMLP only support 128
        n_hidden_layers: 1
    posenc:
        L_3D: 10
        L_view: 4
    density_activ: sigmoid
    tf_init: False

nerf:
    view_dep: True
    depth:
        param: inverse
        range: [1,0]
    sample_intvs: 128
    sample_stratified: true
    fine_sampling: false
    sample_intvs_fine:                                      # number of samples for the fine NeRF
    rand_rays: 2048                                         # number of random rays for each step
    density_noise_reg:                                      # Gaussian noise on density output as regularization
    setbg_opaque: 

data:                                                       # data options
    dataset: llff                                           # dataset name
    scene: fern                                             # scene name
    image_size: [480,640]                                   # input image sizes [height,width]
    num_workers: 4                                          # number of parallel workers for data loading
    preload: true                                           # preload the entire dataset into the memory
    val_ratio: 0.1   


camera:                                                     # camera options
    model: perspective                                      # type of camera model
    ndc: false                                              # reparametrize as normalized device coordinates (NDC)

loss_weight:                                                # loss weights (in log scale)
    render: 0                                               # RGB rendering loss
    render_fine:                                            # RGB rendering loss (for fine NeRF)

optim:                                                      # optimization options
    lr: 1.e-3                                               # learning rate (main)
    lr_end: 1.e-4                                           # terminal learning rate (only used with sched.type=ExponentialLR)
    sched:                                                  # learning rate scheduling options
        type: ExponentialLR                                 # scheduler (see PyTorch doc)
        gamma:                                              # decay rate (can be empty if lr_end were specified)

batch_size:                                                 # batch size (not used for NeRF/BARF)
max_epoch:                                                  # train to maximum number of epochs (not used for NeRF/BARF)
max_iter: 200000                                            # train to maximum number of iterations

freq:                                                       # periodic actions during training
    scalar: 200                                             # log losses and scalar states (every N iterations)
    vis: 1000                                               # visualize results (every N iterations)
    val: 2000                                               # validate on val set (every N iterations)
    ckpt: 5000                                              # save checkpoint (every N iterations)
